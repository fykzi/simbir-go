""".

Revision ID: 948793a95c4a
Revises: 
Create Date: 2023-10-31 06:27:58.788934

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '948793a95c4a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('balance', sa.DOUBLE_PRECISION(asdecimal=True), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('transports',
    sa.Column('transport_id', sa.Integer(), nullable=False),
    sa.Column('canBeRented', sa.Boolean(), nullable=False),
    sa.Column('transportType', postgresql.ENUM('Car', 'Bike', 'Scooter', name='transporttypes'), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('color', sa.String(), nullable=False),
    sa.Column('identifier', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('latitude', sa.DOUBLE_PRECISION(), nullable=False),
    sa.Column('longitude', sa.DOUBLE_PRECISION(), nullable=False),
    sa.Column('minutePrice', sa.DOUBLE_PRECISION(), nullable=True),
    sa.Column('dayPrice', sa.DOUBLE_PRECISION(), nullable=True),
    sa.Column('owner', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner'], ['users.user_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('transport_id')
    )
    op.create_table('rents',
    sa.Column('rent_id', sa.Integer(), nullable=False),
    sa.Column('renter_id', sa.Integer(), nullable=False),
    sa.Column('transport_id', sa.Integer(), nullable=False),
    sa.Column('rent_type', postgresql.ENUM('Minutes', 'Days', name='renttypes'), nullable=False),
    sa.Column('is_end', sa.Boolean(), nullable=True),
    sa.Column('time_start', postgresql.TIME(), nullable=False),
    sa.Column('time_end', postgresql.TIME(), nullable=True),
    sa.Column('price_of_unit', sa.DOUBLE_PRECISION(), nullable=False),
    sa.Column('final_price', sa.DOUBLE_PRECISION(), nullable=True),
    sa.ForeignKeyConstraint(['renter_id'], ['users.user_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['transport_id'], ['transports.transport_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('rent_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rents')
    op.drop_table('transports')
    op.drop_table('users')
    # ### end Alembic commands ###
